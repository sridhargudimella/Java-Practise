
    /*
    For your reference:
    class TreeNode {
        Integer value;
        ArrayList<TreeNode> children;

        TreeNode(Integer value) {
            this.value = value;
            this.children = new ArrayList(3);
        }
    }
    */
    static ArrayList<ArrayList<Integer>> level_order(TreeNode root) {
        // Write your code here.
        ArrayList<ArrayList<Integer>> results = new ArrayList<ArrayList<Integer>>();
        ArrayList<TreeNode> children;
        levelorderhelper(root ,results);
        return results;
    }
    static void levelorderhelper(TreeNode root ,ArrayList<ArrayList<Integer>> results){
        if(root == null){
            return;
        }
        Queue<TreeNode> q = new LinkedList<TreeNode>();
        q.offer(root);
        
        while(!q.isEmpty()){
            int nodescount = q.size();
            ArrayList<Integer> slate = new ArrayList<Integer>();
            
            for(int i =0; i< nodescount;i++){
                TreeNode curr = q.poll();
                slate.add(curr.value);
                if(curr.children!= null){
                    int childcount = curr.children.size();
                    for(int j=0 ; j< childcount ;j++ )
                         q.offer(curr.children.get(j));
                }
                     
            }
            
            results.add(slate);
        }
    }